# Generated by Django 4.2.7 on 2025-07-19 10:24

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('authentication', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('notification_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='알림 ID')),
                ('type', models.CharField(choices=[('queue_update', '대기열 업데이트'), ('patient_call', '환자 호출'), ('exam_ready', '검사 준비'), ('exam_complete', '검사 완료'), ('appointment_reminder', '예약 알림'), ('system', '시스템 알림'), ('emergency', '긴급 알림')], max_length=30, verbose_name='알림 유형')),
                ('title', models.CharField(max_length=100, verbose_name='알림 제목')),
                ('message', models.TextField(verbose_name='알림 내용')),
                ('data', models.JSONField(blank=True, default=dict, help_text='알림과 관련된 추가 정보 (예: queue_id, appointment_id)', verbose_name='추가 데이터')),
                ('status', models.CharField(choices=[('pending', '대기중'), ('sent', '발송완료'), ('failed', '발송실패'), ('read', '읽음')], default='pending', max_length=10, verbose_name='발송 상태')),
                ('fcm_response', models.JSONField(blank=True, null=True, verbose_name='FCM 응답')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='발송일시')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='읽은 시간')),
                ('device_token', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='authentication.devicetoken', verbose_name='디바이스 토큰')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='수신자')),
            ],
            options={
                'verbose_name': '알림',
                'verbose_name_plural': '알림 목록',
                'db_table': 'notifications',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'status'], name='notificatio_user_id_8ab96f_idx'), models.Index(fields=['type', 'created_at'], name='notificatio_type_cb6908_idx'), models.Index(fields=['status', 'created_at'], name='notificatio_status_dee16f_idx')],
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('feedback_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='피드백 ID')),
                ('category', models.CharField(choices=[('app', '앱 사용성'), ('nfc', 'NFC 태그'), ('queue', '대기 시스템'), ('service', '서비스 전반'), ('other', '기타')], max_length=20, verbose_name='카테고리')),
                ('rating', models.IntegerField(choices=[(1, '매우 불만족'), (2, '불만족'), (3, '보통'), (4, '만족'), (5, '매우 만족')], verbose_name='평점')),
                ('title', models.CharField(max_length=200, verbose_name='제목')),
                ('content', models.TextField(verbose_name='내용')),
                ('status', models.CharField(choices=[('pending', '대기중'), ('reviewing', '검토중'), ('resolved', '해결됨'), ('closed', '종료됨')], default='pending', max_length=20, verbose_name='처리 상태')),
                ('response', models.TextField(blank=True, null=True, verbose_name='관리자 답변')),
                ('responded_at', models.DateTimeField(blank=True, null=True, verbose_name='답변 시간')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일시')),
                ('assigned_to', models.ForeignKey(blank=True, db_column='assigned_to_user_id', limit_choices_to={'role__in': ['super', 'dept', 'staff']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_feedbacks', to=settings.AUTH_USER_MODEL, verbose_name='담당 관리자')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to=settings.AUTH_USER_MODEL, verbose_name='작성자')),
            ],
            options={
                'verbose_name': '피드백',
                'verbose_name_plural': '피드백 목록',
                'db_table': 'feedbacks',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'created_at'], name='feedbacks_user_id_c7b83f_idx'), models.Index(fields=['category', 'status'], name='feedbacks_categor_862552_idx'), models.Index(fields=['status', 'created_at'], name='feedbacks_status_e7bc93_idx'), models.Index(fields=['assigned_to', 'status'], name='feedbacks_assigne_f7acd7_idx')],
            },
        ),
        migrations.CreateModel(
            name='AdminLog',
            fields=[
                ('log_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='로그 ID')),
                ('action', models.CharField(choices=[('create', '생성'), ('update', '수정'), ('delete', '삭제')], max_length=10, verbose_name='수행한 작업의 유형')),
                ('target_table', models.CharField(max_length=100, verbose_name='대상 테이블명')),
                ('target_id', models.CharField(max_length=100, verbose_name='대상 레코드 ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='로그 발생 시각')),
                ('user', models.ForeignKey(db_column='user_id', limit_choices_to={'role__in': ['super', 'dept', 'staff']}, on_delete=django.db.models.deletion.CASCADE, related_name='admin_logs', to=settings.AUTH_USER_MODEL, verbose_name='관리자')),
            ],
            options={
                'verbose_name': '관리자 로그',
                'verbose_name_plural': '관리자 로그 목록',
                'db_table': 'admin_logs',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', 'timestamp'], name='admin_logs_user_id_916751_idx'), models.Index(fields=['action', 'timestamp'], name='admin_logs_action_cc36f2_idx'), models.Index(fields=['target_table', 'target_id'], name='admin_logs_target__315337_idx'), models.Index(fields=['timestamp'], name='admin_logs_timesta_952aa9_idx')],
            },
        ),
    ]
